definitions:
  dto.AuthDto:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    type: object
  dto.AuthOutputDto:
    properties:
      token:
        type: string
    type: object
  dto.CreateProductDto:
    properties:
      code_value:
        type: string
      expiration:
        type: string
      is_published:
        type: boolean
      name:
        type: string
      price:
        type: number
      quantity:
        type: integer
    required:
    - code_value
    - expiration
    - is_published
    - name
    - price
    - quantity
    type: object
  entity.Product:
    properties:
      codeValue:
        type: string
      expiration:
        type: string
      id:
        type: integer
      isPublished:
        type: boolean
      name:
        type: string
      price:
        type: number
      quantity:
        type: integer
    type: object
info:
  contact: {}
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Login user
      parameters:
      - description: auth
        in: body
        name: auth
        required: true
        schema:
          $ref: '#/definitions/dto.AuthDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.AuthOutputDto'
      tags:
      - auth
  /product:
    post:
      consumes:
      - application/json
      description: Create new product
      parameters:
      - description: product
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/dto.CreateProductDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Product'
      tags:
      - product
swagger: "2.0"
